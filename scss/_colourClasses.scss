//colour classes
//array mapping : multidimensional list : sass 3.3 =>
$colors: (

    'grey': (
        $pf-color-brand-grey-50,
        $pf-color-brand-grey-100,
        $pf-color-brand-grey-200,
        $pf-color-brand-grey-300,
        $pf-color-brand-grey-400,
        $pf-color-brand-grey-500,
        $pf-color-brand-grey-600,
        $pf-color-brand-grey-700,
        $pf-color-brand-grey-800,
        $pf-color-brand-grey-900
    ),

    'red': (
        $pf-color-brand-red-50,
        $pf-color-brand-red-100,
        $pf-color-brand-red-200,
        $pf-color-brand-red-300,
        $pf-color-brand-red-400,
        $pf-color-brand-red-500,
        $pf-color-brand-red-600,
        $pf-color-brand-red-700,
        $pf-color-brand-red-800,
        $pf-color-brand-red-900
    ),

    'darkblue': (
        $pf-color-brand-darkblue-50,
        $pf-color-brand-darkblue-100,
        $pf-color-brand-darkblue-200,
        $pf-color-brand-darkblue-300,
        $pf-color-brand-darkblue-400,
        $pf-color-brand-darkblue-500,
        $pf-color-brand-darkblue-600,
        $pf-color-brand-darkblue-700,
        $pf-color-brand-darkblue-800,
        $pf-color-brand-darkblue-900
    ),

    'lightblue': (
        $pf-color-brand-lightblue-50,
        $pf-color-brand-lightblue-100,
        $pf-color-brand-lightblue-200,
        $pf-color-brand-lightblue-300,
        $pf-color-brand-lightblue-400,
        $pf-color-brand-lightblue-500,
        $pf-color-brand-lightblue-600,
        $pf-color-brand-lightblue-700,
        $pf-color-brand-lightblue-800,
        $pf-color-brand-lightblue-900
    ),

    'green': (
        $pf-color-brand-green-50,
        $pf-color-brand-green-100,
        $pf-color-brand-green-200,
        $pf-color-brand-green-300,
        $pf-color-brand-green-400,
        $pf-color-brand-green-500,
        $pf-color-brand-green-600,
        $pf-color-brand-green-700,
        $pf-color-brand-green-800,
        $pf-color-brand-green-900
    ),

    'purple': (
        $pf-color-brand-purple-50,
        $pf-color-brand-purple-100,
        $pf-color-brand-purple-200,
        $pf-color-brand-purple-300,
        $pf-color-brand-purple-400,
        $pf-color-brand-purple-500,
        $pf-color-brand-purple-600,
        $pf-color-brand-purple-700,
        $pf-color-brand-purple-800,
        $pf-color-brand-purple-900
    ),

    'orange': (
        $pf-color-brand-orange-50,
        $pf-color-brand-orange-100,
        $pf-color-brand-orange-200,
        $pf-color-brand-orange-300,
        $pf-color-brand-orange-400,
        $pf-color-brand-orange-500,
        $pf-color-brand-orange-600,
        $pf-color-brand-orange-700,
        $pf-color-brand-orange-800,
        $pf-color-brand-orange-900
    ),
    'yellow': (
        $pf-color-brand-yellow-50,
        $pf-color-brand-yellow-100,
        $pf-color-brand-yellow-200,
        $pf-color-brand-yellow-300,
        $pf-color-brand-yellow-400,
        $pf-color-brand-yellow-500,
        $pf-color-brand-yellow-600,
        $pf-color-brand-yellow-700,
        $pf-color-brand-yellow-800,
        $pf-color-brand-yellow-900
    )

);

//Background colour : Text colour : Gradient
//function to create classes
//$colors map is located in:  css/scss/maps/_colours-map.scss
@each $name, $value in $colors {

  $scale: 0;
  $mapkey: 1;

  @while $scale <= 900 {

    //background colour
    .pf-#{$name}-#{$scale}-bg {
    background-color: nth($value, $mapkey) !important;
    }

    //gradient colours - vertical
    .pf-#{$name}-#{$scale}-gradient-vertical {
      @include gradient(nth($value, $mapkey), $white-fade, vertical);
    }

    //gradient colours - vertical reversed
    .pf-#{$name}-#{$scale}-gradient-vertical-bottom {
      @include gradient(nth($value, $mapkey), $white-fade, vertical-bottom);
    }

    //gradient colours - horizontal
    .pf-#{$name}-#{$scale}-gradient-horizontal {
      @include gradient(nth($value, $mapkey), $white-fade, horizontal);
    }

    //gradient colours - horizontal reversed
    .pf-#{$name}-#{$scale}-gradient-horizontal-right {
      @include gradient(nth($value, $mapkey), $white-fade, horizontal-right);
    }

    //gradient colours - radial
    .pf-#{$name}-#{$scale}-gradient-radial {
      @include gradient(nth($value, $mapkey), $white-fade, radial);
    }

    $scale: $scale + 100;
    $mapkey: $mapkey + 1;

  }

}
